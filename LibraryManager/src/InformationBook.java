
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ashraf Habromman
 */
public class InformationBook extends javax.swing.JFrame {

    /**
     * Creates new form SaveAndUpdateFram
     */
    //for case 2 "update"
    String bookNameThatUserEntered;
    String iSBNThatUserEntered;
    String autherThatUserEntered;
    
    
    String description;
    Integer type ;
    Integer selectedTypeToSearch;
    
    LinkedList<Book> fileBooks;
    
    public InformationBook(String description, int type) { //this integer flag to select and determine add , search or update ;
        this.description = description ;
        this.type = type ;
        setTitle(description);
        initComponents();
        if(this.type.equals(1)){
            this.bookName.setEditable(false);
            this.iSBN.setEditable(false);
            this.author.setEditable(false);
            this.publicationDate.setEditable(false);
            this.numberOfPages.setEditable(false);
            this.price.setEditable(false);
        }
        
        
 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookName = new javax.swing.JTextField();
        iSBN = new javax.swing.JTextField();
        author = new javax.swing.JTextField();
        publicationDate = new javax.swing.JTextField();
        numberOfPages = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bookName.setPreferredSize(new java.awt.Dimension(70, 17));
        bookName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNameActionPerformed(evt);
            }
        });

        iSBN.setPreferredSize(new java.awt.Dimension(70, 17));
        iSBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iSBNActionPerformed(evt);
            }
        });

        author.setPreferredSize(new java.awt.Dimension(70, 17));
        author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorActionPerformed(evt);
            }
        });

        publicationDate.setPreferredSize(new java.awt.Dimension(70, 17));
        publicationDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicationDateActionPerformed(evt);
            }
        });

        numberOfPages.setPreferredSize(new java.awt.Dimension(70, 17));
        numberOfPages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfPagesActionPerformed(evt);
            }
        });

        price.setPreferredSize(new java.awt.Dimension(70, 17));
        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Library Manager");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Book Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("ISBN");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Author");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Publication Date");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Number of pages");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Price");

        okButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookName, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iSBN, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publicationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfPages, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(140, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iSBN, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(author, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(publicationDate, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfPages, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookNameActionPerformed

    private void iSBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iSBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iSBNActionPerformed

    private void authorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorActionPerformed

    private void publicationDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicationDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publicationDateActionPerformed

    private void numberOfPagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfPagesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfPagesActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        switch(this.type){
            case 0 : // 0 case for add new book 
            {
                String dataOfBook = this.bookName.getText()+ "," +this.iSBN.getText() + "," +this.author.getText()+","
                        +this.publicationDate.getText()+ "," +this.numberOfPages.getText()+","+this.price.getText()+"\n";
                this.appendOnFile(dataOfBook);
                this.setVisible(false);
                JOptionPane.showMessageDialog(this, "The book saved", "Save", JOptionPane.INFORMATION_MESSAGE);
                break; 
            }
            case 1 : // 1 for search button ;
                this.setVisible(false);
                break; 
                
            case 2 : // 2 for update button ;
                this.fileBooks = new LinkedList<Book>();
                Integer counter = 0 ;
                Integer acuallCounter = 0;
                try {
                      BufferedReader read = new BufferedReader(new FileReader("Books.txt"));
                      String book ;
                      while((book=read.readLine())!=null){
                          
                          String [] itemsOfBook = book.split(",");
                          this.fileBooks.add(new Book(itemsOfBook[0], itemsOfBook[1], itemsOfBook[2], itemsOfBook[3], itemsOfBook[5], itemsOfBook[5]));
                          switch(this.selectedTypeToSearch){
                              
                              case 0 : //the user choose book name to search ...then update
                                  if(!itemsOfBook[0].equals(this.bookNameThatUserEntered))
                                      counter++;
                                  else acuallCounter=counter;
                                  break;
                        
                              case 1 : //the user choose isbn to search ...then update
                                  if(!itemsOfBook[1].equals(this.iSBNThatUserEntered))
                                      counter++;
                                  else acuallCounter=counter;
                                  break;
                        
                              case 2: //the user choose author to search ...then update
                                  if(!itemsOfBook[2].equals(this.autherThatUserEntered))
                                      counter++;
                                  else acuallCounter=counter;
                                  break;
                            }    
                
                          
                      }
                }
                catch(Exception exp){
                    JOptionPane.showMessageDialog(null, "file not found");
                }
                
                Book bookToUpdte = fileBooks.get(acuallCounter);
                
                bookToUpdte.setName(this.bookName.getText());
                bookToUpdte.setISBN(this.iSBN.getText());
                bookToUpdte.setAuthor(this.author.getText());
                bookToUpdte.setPublicationDate(this.publicationDate.getText());
                bookToUpdte.setNumberOfPages(this.numberOfPages.getText());
                bookToUpdte.setPrice(this.price.getText());
                fileBooks.remove(acuallCounter);
                
                fileBooks.set(acuallCounter, bookToUpdte);
                try{
                    BufferedWriter write = new BufferedWriter(new FileWriter("Books.txt"));
                    int numberOfBooks = fileBooks.size();
                    for(int i=0 ; i <numberOfBooks; i++ ){
                        write.write(fileBooks.get(i).toString());
                        System.out.println("sososo");
                        
                    }
                    write.close();

                }
                catch(Exception exp){
                    JOptionPane.showMessageDialog(null, "file not found");
                
                }
            this.setVisible(false);

        }
    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SaveAndUpdateFram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SaveAndUpdateFram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SaveAndUpdateFram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SaveAndUpdateFram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SaveAndUpdateFram().setVisible(true);
//            }
//        });
//    }
    
    public void appendOnFile(String dataOfBook)
    {
        try {
            BufferedWriter append = new BufferedWriter(new FileWriter("Books.txt",true));
            append.write(dataOfBook);
            append.close();
        }
        catch(IOException ex){
            JOptionPane.showMessageDialog(null, "can't open the file .");
        }
    }
    
    public void setBookName(String bookName){
        this.bookName.setText(bookName);
    }
    
    public void setISBN(String iSBN){
        this.iSBN.setText(iSBN);
    }
    public void setAuthor(String author){
        this.author.setText(author);
    }
    public void setPublicationDate(String publication){
        this.publicationDate.setText(publication);
    }
    public void setNumberOfPages(String number){
        this.numberOfPages.setText(number);
    }
    public void setPrice(String price){
        this.price.setText(price);
    }
    
    public void setUserEntered(String bookName, String iSBN, String author ,Integer type){
        
        selectedTypeToSearch = type ;
        switch(type){
            case 0 :
                bookNameThatUserEntered = bookName ; 
                break;
                
            case 1: 
                iSBNThatUserEntered = iSBN;
                break;
                
            case 2: 
                autherThatUserEntered = author;
                break;
        }
        
    }
    

    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField author;
    private javax.swing.JTextField bookName;
    private javax.swing.JTextField iSBN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField numberOfPages;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField price;
    private javax.swing.JTextField publicationDate;
    // End of variables declaration//GEN-END:variables
}
